prototype(signalwerk.sfgz:CourseView) < prototype(Neos.Neos:Content) {

    # enroll
    currentCourse = ${q(site).find('[instanceof signalwerk.sfgz:Course][coursid = "' + request.arguments.kurs +'"]').get(0)}
    currentExecution = ${q(site).find('[instanceof signalwerk.sfgz:CourseExecution][code = "' + request.arguments.durchfuehrung +'"]').get(0)}

    # detail view
    course = Neos.Fusion:Collection {
      collection = ${q(site).find('[instanceof signalwerk.sfgz:Course][coursid = "' + request.arguments.kurs +'"]')}
      itemName = 'course'
      itemRenderer = Neos.Fusion:Template {
        templatePath = 'resource://signalwerk.sfgz/Private/Templates/NodeTypes/Course.html'
        node = ${course}
        executions = Neos.Fusion:Collection {
          collection = ${q(course).find('[instanceof signalwerk.sfgz:CourseExecution]').sort('start', 'ASC')}
          itemName = 'courseExecution'

          itemRenderer = Neos.Fusion:Template {

            templatePath = 'resource://signalwerk.sfgz/Private/Templates/NodeTypes/CourseExecution.html'
            node = ${courseExecution}
            course = ${course}
            // we could save one query if we save that id of the viscom
            viscom = ${q(course).filterPropertiesFromArray('[identifier="' + q(site).find('[instanceof signalwerk.sfgz:CourseCategory][title*="Viscom-Reduktion"]').get()[0].identifier + '"]','categories')}
          }
        }
      }
    }


    filter = signalwerk.sfgz:Content.CourseViewFilter {
        // uri = ${props.imageUri}
    }

    @cache {
        mode = 'uncached'
        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
        }
    }

#    @cache {
#        mode = 'cached'
#
#        entryTags {
#                # Flushes cache entries if any node of type course changes.
#                1 = ${'NodeType_signalwerk.sfgz:Course'}
#        }
#    }

}

# Abstract render definition for a single content column in a multi column element
prototype(signalwerk.sfgz:CourseViewListItem) < prototype(Neos.Neos:ContentCollection) {


}
