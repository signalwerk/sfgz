# Basic implementation of a flexible MultiColumn element, not exposed directly but inherited by all specific MultiColumn content elements
prototype(schule.signalwerkCh:MultiColumn) < prototype(Neos.Neos:Content) {
	templatePath = 'resource://schule.signalwerkCh/Private/Templates/NodeTypes/MultiColumn.html'
	layout = ${q(node).property('layout')}
	attributes.class = ${'container columns-' + q(node).property('layout')}
	columns = Neos.Fusion:Collection {
		@context.columnLayout = ${q(node).property('layout')}
		collection = ${q(node).children('[instanceof Neos.Neos:ContentCollection]')}
		itemRenderer = schule.signalwerkCh:MultiColumnItem
		itemName = 'node'
		iterationName = 'columnIteration'
	}
}

# Abstract render definition for a single content column in a multi column element
prototype(schule.signalwerkCh:MultiColumnItem) < prototype(Neos.Neos:ContentCollection) {
	nodePath = '.'
	attributes = Neos.Fusion:Attributes {
		class = 'column'
	}
}

# # Two Column TS Object
# prototype(schule.signalwerkCh:TwoColumn) >
# prototype(schule.signalwerkCh:TwoColumn) < prototype(schule.signalwerkCh:MultiColumn)



# one Column TS Object
prototype(schule.signalwerkCh:OneColumn) >
prototype(schule.signalwerkCh:OneColumn) < prototype(schule.signalwerkCh:MultiColumn)
