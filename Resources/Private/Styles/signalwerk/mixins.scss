// usage: @include font;
// check https://google-webfonts-helper.herokuapp.com/
@mixin fontdef($fontPath, $fontVersion:"1.0.0") {
  src:  url('#{$fontPath}.eot?v=#{$fontVersion}');
  src:  url('#{$fontPath}.eot?#iefix&v=#{$fontVersion}') format('embedded-opentype'),
  url('#{$fontPath}.woff2?v=#{$fontVersion}') format('woff2'),
  url('#{$fontPath}.woff?v=#{$fontVersion}') format('woff')
}

@mixin font($font:sans) {
  font-family: map-get($font-family, $font);
  font-weight: normal;
  font-style: normal;
}

@mixin font-bold($font:sans) {
  font-family: map-get($font-family, $font);
  font-weight: map-get($font-weight-bold, $font);
}

@mixin fontUppercase {
  text-transform: uppercase;
  letter-spacing: 0.15em;
}

@mixin grid-column-gradient($values...) {
  background-image: linear-gradient(to right, #{$values});
}


@function gradient-stops($grid-columns) {
  $transparent: rgba(0,0,0,0);
  $color: rgba(255,0,0,0.07);

  $column-offset: 0;

  $values: ($color 0);

  @for $i from 1 through $grid-columns {

    @if $i != $grid-columns  {
      $column-offset: $column-offset + span(1);
      $values: append($values, $color $column-offset, comma);
      $values: append($values, $transparent $column-offset, comma);
      $column-offset: $column-offset + gutter();
      $values: append($values, $transparent $column-offset, comma);
      $values: append($values, $color $column-offset, comma);
    } @else {
      $column-offset: $column-offset + span(1);
      $values: append($values, $color $column-offset, comma);
      $values: append($values, $transparent $column-offset, comma);
    }
  }

  @return $values;
}



@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin shContainer($arg...) {

  @include container($arg);

  @if $debug == true {
    @include grid-column-gradient(gradient-stops(12));
    background-size: span(last 12);
  }
}

@mixin arrow-general($innerselector, $size) {
  height: $size*2;
  width: $size*2;
  transform: translateY(-50%);
  // top:50%;
  cursor: pointer;
  position: relative;

  .#{$innerselector} {
    position: absolute;;
    height: $size;
    width: $size;
    border-radius: 50%;
    background-color: mix($cCorporateBlue, transparent, 75);
    &:hover{
      background-color: mix($cThemeGreen, transparent, 75);
    }

    margin-top: ($size/2)*.9; // a little bit highter

    &::after {
      content: "";
      position: absolute;
      height: $size;
      width: $size;
      background-image: url('../images/slider-arrow-sh.svg');
    }
  }
}

@mixin arrow-prev($innerselector, $size) {
  @include arrow-general($innerselector, $size);
  .#{$innerselector} {
    left: 0;
    &::after {
    }
  }
}

@mixin arrow-next($innerselector, $size) {
  @include arrow-general($innerselector, $size);
  .#{$innerselector} {
    right: 0;
    &::after {
      transform: rotate(180deg);;
    }
  }
}

@mixin inline-icon($filename, $size) {
  &:before {
    content: "";
    display: inline-block;
    width: 1em;
    height: 1em;
    background-size: $size;
    background-image: url("../Assets/Images/" + $filename);
    background-repeat: no-repeat;
    background-position: center bottom;
  }
}
