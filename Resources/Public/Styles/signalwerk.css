@charset "UTF-8";
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

@font-face {
  font-family: "SFGZSansBlack";
  font-weight: 800;
  font-style: normal;
  src: url("../Fonts/Helvetica/2B6D49_0_0.eot");
  src: url("../Fonts/Helvetica/2B6D49_0_0.eot?#iefix") format("embedded-opentype"), url("../Fonts/Helvetica/2B6D49_0_0.woff") format("woff"), url("../Fonts/Helvetica/2B6D49_0_0.ttf") format("truetype");
}

/* ICONS */
html {
  font-size: 17px;
  line-height: 1.4;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
  font-weight: normal;
  font-style: normal;
  color: #0f0f0f;
}

@media screen and (max-width: 1024px) {
  html {
    font-size: 13.6px;
  }
}

a {
  color: #0f0f0f;
  text-decoration: none;
}

a:hover {
  color: #db0000;
}

b, strong, span.strong {
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
}

ul {
  padding-left: 0;
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

p {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
  font-weight: normal;
  font-style: normal;
}

h1, h3 {
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
}

p {
  font-size: 1rem;
  margin-top: 0.7em;
  margin-bottom: 0.8em;
}

h1,
h2,
h3 {
  margin-top: 0.25em;
  margin-bottom: 0;
  line-height: 1.1;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
  font-weight: normal;
  font-style: normal;
  font-size: 2rem;
}

h3 {
  margin-top: 1em;
  font-size: 1rem;
}

h1 + h2 {
  margin-top: 0;
}

h3 + p,
h3 + ul {
  margin-top: 0;
}

h1 + p,
h2 + p,
h2 + h3 {
  margin-top: 2.5rem;
}

hr {
  height: 0.15rem;
  background-color: white;
  border: none;
  border-bottom: black solid 0.15rem;
}

p {
  margin-top: 0.5em;
  margin-bottom: 0.7em;
}

h4, h5, h6, h7, h8 {
  color: lime;
}

table {
  border-collapse: collapse;
  width: 100%;
  margin: 0.4em 0;
}

table th,
table th p {
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
}

table th p,
table tr p {
  margin: 0;
  padding: 0;
}

table tr:first-child {
  border-top-width: 0.1rem;
  border-top-style: solid;
  border-top-color: #0f0f0f;
}

table tr {
  border-bottom-width: 0.1rem;
  border-bottom-style: solid;
  border-bottom-color: #0f0f0f;
}

.widthError {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100;
  height: 100%;
  background-color: red;
}

@media (min-width: 1130px) {
  .widthError {
    display: none;
  }
}

.header {
  position: relative;
  margin: 0 30px;
  z-index: 4;
  max-width: 1130px;
}

@media screen and (max-width: 768px) {
  .header {
    margin-left: 0;
    margin-right: 0;
  }
}

.neos-backend .header {
  display: none;
}

.header-lion {
  width: 103px;
  height: 138px;
  position: fixed;
  left: 30px;
  top: 20px;
  z-index: 999;
}

.header-lion img {
  width: 100%;
  height: 100%;
}

.header-logo {
  display: block;
  width: 27px;
  height: 27px;
  position: fixed;
  top: 75px;
  left: 143px;
  z-index: 5;
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
}

@media screen and (max-width: 768px) {
  .header-logo {
    display: none;
  }
}

.header-logo img {
  width: 100%;
  height: 100%;
}

.header-logo img.header-logo-desktop {
  display: inline;
}

.header-logo img.header-logo-mobile {
  display: none;
}

@media screen and (max-width: 768px) {
  .header-lion, .header-logo {
    display: none;
  }
}

.header-navigation-wrap {
  top: auto;
  left: auto;
  height: auto;
  margin: 70px 0 0 148px;
  position: static;
}

@media screen and (max-width: 768px) {
  .header-navigation-wrap {
    margin-left: 0;
    margin-right: 0;
  }
}

.neos-backend .header-navigation-wrap {
  margin-left: 1rem;
}

.header-navigation-wrap .meta, .header-navigation-wrap .menu {
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
}

.header-navigation-wrap .meta:after, .header-navigation-wrap .menu:after {
  content: "";
  display: table;
  clear: both;
}

.header-navigation-wrap .meta ul, .header-navigation-wrap .menu ul {
  list-style: none;
  margin: 0;
}

@media screen and (min-width: 1024px) {
  .header-navigation-wrap .meta ul, .header-navigation-wrap .menu ul {
    padding: 0;
  }
}

.header-navigation-wrap .meta li, .header-navigation-wrap .menu li {
  margin: 0 0.75em 0 0;
}

.header-navigation-wrap .meta li.current a,
.header-navigation-wrap .meta li.active > a, .header-navigation-wrap .menu li.current a,
.header-navigation-wrap .menu li.active > a {
  color: #8f8f8f;
}

@media screen and (max-width: 768px) {
  .header-navigation-wrap .meta li.normal > a, .header-navigation-wrap .menu li.normal > a {
    color: #ffffff;
  }
}

@media screen and (min-width: 768px) {
  .header-navigation-wrap .meta li, .header-navigation-wrap .menu li {
    float: left;
  }
}

.header-navigation-wrap .meta {
  font-size: 1.15rem;
  top: -1.5em;
  left: auto;
  margin-left: 0.15em;
  position: absolute;
}

.header-navigation-wrap .header-name {
  margin: 0;
  padding-bottom: 0;
  font-size: 2.3rem;
}

.header-navigation-wrap .menu1 {
  font-size: 1.65rem;
}

.header-navigation-wrap .menu2 {
  font-size: 1.15rem;
  padding-top: 0.2rem;
  padding-bottom: 1.6rem;
  line-height: 1.2;
}

.header-navigation-wrap .menu2 ul li {
  margin: 0;
}

.header-navigation-wrap .menu2 ul li:after {
  content: "–";
  display: inline-block;
  margin-right: 0.35em;
  padding-right: 0.1em;
  padding-left: 0.1em;
}

.header-navigation-wrap .menu2 ul li:last-child:after {
  content: "";
}

@media screen and (max-width: 768px) {
  .header-navigation-wrap .meta,
  .header-navigation-wrap .menu1,
  .header-navigation-wrap .menu2,
  .header-navigation-wrap .header-name {
    display: none;
  }
}

.content {
  box-sizing: border-box;
  width: 100%;
  max-width: 1130px;
  padding-left: 180px;
}

@media screen and (max-width: 768px) {
  .content {
    padding: 2%;
  }
}

.neos-backend .content {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 2rem;
}

.content a {
  padding-bottom: 0.05em;
  border-bottom: black solid 0.15em;
}

.content a.noLine {
  padding-bottom: 0;
  border-bottom: none;
}

.content .doUderline {
  padding-bottom: 0;
  border-bottom: none;
}

.content a.noUnderline,
.content h1 a,
.content h2 a {
  padding-bottom: 0;
  border-bottom: none;
}

.content a[href^="http"]:before {
  content: "";
  display: inline-block;
  width: 1em;
  height: 1em;
  background-size: 60%;
  background-image: url("../Assets/Images/icon_external-link.svg");
  background-repeat: no-repeat;
  background-position: center bottom;
}

.content ul {
  list-style: none;
}

.content li {
  position: relative;
  padding-left: 0.8em;
}

.content li:before {
  content: "– ";
  position: absolute;
  left: 0;
  top: 0;
}

.content-inner {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.content-inner:after {
  content: " ";
  display: block;
  clear: both;
}

.content-inner .content_main {
  margin-bottom: 2rem;
}

@media screen and (min-width: 768px) {
  .content-inner .content_main {
    width: 74.28571%;
    float: left;
    margin-right: 2.85714%;
  }
  .content-inner .content_extra {
    width: 22.85714%;
    float: right;
    margin-right: 0;
  }
}

.course .content-inner .content_main {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
}

.course .content-inner .content_main .course-root {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.course .content-inner .content_main .course-root:after {
  content: " ";
  display: block;
  clear: both;
}

@media screen and (min-width: 768px) {
  .course .content-inner .content_main .course-root .course-course {
    width: 74.28571%;
    float: left;
    margin-right: 2.85714%;
  }
  .course .content-inner .content_main .course-root .course-execution {
    width: 22.85714%;
    float: right;
    margin-right: 0;
    word-wrap: break-word;
  }
}

.course .content-inner .content_extra {
  display: none;
}

.content-inner .menu3 {
  padding-bottom: 3rem;
  word-wrap: break-word;
  padding-left: 0.4em;
  padding-right: 0.4em;
}

.content-inner .menu3 ul {
  margin: 0;
}

.content-inner .menu3 li {
  float: none;
}

.neos-backend .content-inner {
  width: 100%;
}

.signalwerk-sfgz-onecolumn.columns-mobileonly {
  display: none;
}

@media screen and (max-width: 768px) {
  .signalwerk-sfgz-onecolumn.columns-mobileonly {
    display: block;
  }
}

.neos-backend .signalwerk-sfgz-onecolumn.columns-mobileonly {
  display: block;
}

.column {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.column:after {
  content: " ";
  display: block;
  clear: both;
}

.news-item__gutter {
  width: 2.85714%;
}

.news-item__sizer,
.news-item {
  width: 48.57143%;
}

@media screen and (max-width: 768px) {
  .news-item__sizer,
  .news-item {
    width: 100%;
  }
}

.news-item {
  position: relative;
  padding-bottom: 1rem;
  font-size: 1.15rem;
  transition: opacity 300ms;
}

.news-item p {
  font-size: 1.15rem;
}

.news-item a {
  color: black;
}

.news-item a h1, .news-item a h2 {
  border-bottom: transparent solid 0.1em;
  transition: border-bottom 400ms ease;
  padding-top: 0.1em;
  line-height: 1.1;
  padding-bottom: 0em;
  display: inline;
  position: relative;
}

@media screen and (max-width: 768px) {
  .news-item a h1, .news-item a h2 {
    border-bottom: black solid 0.1em;
  }
}

.news-item a h1:after, .news-item a h2:after {
  clear: both;
  display: block;
  content: "";
  width: 100%;
}

.news-item a:hover h1, .news-item a:hover h2 {
  border-bottom: #db0000 solid 0.1em;
  color: #db0000;
}

.news-item a:hover .teaser-image,
.news-item a:hover .news-item__date,
.news-item a:hover .news-item__text {
  opacity: 0.65;
}

.news-item a[href^="http"]:before {
  display: none;
}

.news-item--image-loaded {
  opacity: 1;
}

.news-item__date {
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
  margin-top: 0;
}

.news-item__text {
  padding-top: 0.5rem;
}

.news-item__text p {
  margin-top: 0;
}

.news-item .teaser-image {
  position: relative;
}

.news-item .teaser-image:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: left bottom;
}

.news-item .teaser-image.background01:after {
  background-image: url("../Assets/Images/logo/generated/small/background01_s.svg");
}

.news-item .teaser-image.background02:after {
  background-image: url("../Assets/Images/logo/generated/small/background02_s.svg");
}

.news-item .teaser-image.background03:after {
  background-image: url("../Assets/Images/logo/generated/small/background03_s.svg");
}

.news-item .teaser-image.background04:after {
  background-image: url("../Assets/Images/logo/generated/small/background04_s.svg");
}

.news-item .teaser-image.background05:after {
  background-image: url("../Assets/Images/logo/generated/small/background05_s.svg");
}

.news-item .teaser-image.background06:after {
  background-image: url("../Assets/Images/logo/generated/small/background06_s.svg");
}

.news-item .teaser-image.background07:after {
  background-image: url("../Assets/Images/logo/generated/small/background07_s.svg");
}

.news-item .teaser-image.background08:after {
  background-image: url("../Assets/Images/logo/generated/small/background08_s.svg");
}

.news-item .teaser-image.background09:after {
  background-image: url("../Assets/Images/logo/generated/small/background09_s.svg");
}

.news-item .teaser-image.background10:after {
  background-image: url("../Assets/Images/logo/generated/small/background10_s.svg");
}

.news-item .teaser-image.background11:after {
  background-image: url("../Assets/Images/logo/generated/small/background11_s.svg");
}

.news-item .teaser-image.background12:after {
  background-image: url("../Assets/Images/logo/generated/small/background12_s.svg");
}

.news-item .teaser-image.background13:after {
  background-image: url("../Assets/Images/logo/generated/small/background13_s.svg");
}

.news-item .teaser-image.background14:after {
  background-image: url("../Assets/Images/logo/generated/small/background14_s.svg");
}

.news-item .teaser-image.background15:after {
  background-image: url("../Assets/Images/logo/generated/small/background15_s.svg");
}

.news-item .teaser-image.background16:after {
  background-image: url("../Assets/Images/logo/generated/small/background16_s.svg");
}

.news-item .teaser-image.background17:after {
  background-image: url("../Assets/Images/logo/generated/small/background17_s.svg");
}

.news-item .teaser-image.background18:after {
  background-image: url("../Assets/Images/logo/generated/small/background18_s.svg");
}

.news-item .teaser-image.background19:after {
  background-image: url("../Assets/Images/logo/generated/small/background19_s.svg");
}

.news-item .teaser-image.background20:after {
  background-image: url("../Assets/Images/logo/generated/small/background20_s.svg");
}

.news-item .teaser-image img {
  display: block;
  position: relative;
  width: 100%;
  height: auto;
}

.signalwerk-sfgz-courseview,
.signalwerk-sfgz-course,
.signalwerk-sfgz-foldout,
.signalwerk-sfgz-contactitem,
.neos-nodetypes-menu,
.neos-nodetypes-text,
.neos-nodetypes-headline {
  background-color: white;
  overflow: auto;
  padding-left: 0.4em;
  padding-right: 0.4em;
}

.signalwerk-sfgz-vimeo,
.signalwerk-sfgz-youtube {
  padding: 0.4em 0;
}

.neos-nodetypes-image figure {
  margin: 0;
}

.neos-nodetypes-image img {
  max-width: 100%;
  width: auto;
  height: auto;
}

.signalwerk-sfgz-upload {
  background-color: white;
  padding: 0.4em;
}

.signalwerk-sfgz-upload > .Upload-item > a:before {
  display: none;
}

.uploadIcon:before {
  content: "";
  display: inline-block;
  width: 1em;
  height: 1em;
  background-size: 60%;
  background-image: url("../Assets/Images/icon_document.svg");
  background-repeat: no-repeat;
  background-position: center bottom;
}

.signalwerk-sfgz-space {
  background-color: white;
  padding: 0.4em;
}

.navigation--mobile {
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: fixed;
  top: -70px;
  left: 0;
  height: 70px;
  width: 100%;
  z-index: 5;
  background-color: black;
  color: #ffffff;
  transition: -webkit-transform 200ms ease;
  transition: transform 200ms ease;
  transition: transform 200ms ease, -webkit-transform 200ms ease;
}

@media screen and (max-width: 768px) {
  .navigation--mobile {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
  }
}

.navigation__logos {
  width: 85px;
  height: 70px;
  padding: 10px;
  background-color: black;
  padding-right: 0;
  box-sizing: border-box;
}

.navigation__lion--mobile {
  height: 100%;
  margin-right: 10px;
}

.navigation__flag--mobile {
  display: inline-block;
  height: 20px;
  margin-bottom: 13px;
}

.navigation__toggle {
  box-sizing: border-box;
  display: block;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  height: 100%;
  padding-left: 0;
  padding-top: 5px;
  color: #ffffff;
  background-color: black;
  font-size: 22px;
  border: none;
  -webkit-appearance: none;
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
}

.navigation__content {
  position: absolute;
  display: block;
  top: 70px;
  left: 0;
  right: 0;
  z-index: -1;
  padding-left: 85px;
  background-color: black;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  transition: -webkit-transform 200ms ease;
  transition: transform 200ms ease;
  transition: transform 200ms ease, -webkit-transform 200ms ease;
}

.navigation__content--open {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.menu1--mobile {
  font-size: 22px;
  font-family: SFGZSansBlack, sans-serif;
  font-weight: 800;
}

.menu1--mobile ul {
  padding-left: 0;
}

.menu1--mobile li {
  list-style: none;
}

.menu1--mobile a {
  color: #ffffff;
}

.menu2--mobile {
  background-color: #333333;
  font-size: 16px;
  line-height: 1.25;
  font-size: 1rem;
  line-height: 1.6;
  display: none;
}

.menu2--mobile > nav {
  padding: 1rem 0 0.75rem 85px;
}

@media screen and (max-width: 768px) {
  .menu2--mobile {
    display: block;
  }
}

.menu2--mobile a {
  color: #ffffff;
}

.menu2--mobile .normal > ul {
  overflow: hidden;
  height: 0;
}

.menu2--mobile ul, .menu2--mobile li {
  padding-top: 0.15rem;
  padding-bottom: 0.15rem;
}

@media screen and (max-width: 768px) {
  .menu2--mobile ul, .menu2--mobile li {
    float: none;
    padding-left: 0;
  }
}

.menu2--mobile li > ul {
  padding-left: 20px;
}

.current a {
  color: #8f8f8f;
  border-bottom-color: #8f8f8f;
}

@media screen and (max-width: 768px) {
  .menu3 {
    display: none;
  }
}

.menuSiblings {
  display: none;
}

.hideL3 .menu3 {
  display: none;
}

.showSiblings .menu3 {
  display: none;
}

.showSiblings .menuSiblings {
  display: block;
}

.foldout-wrapper {
  overflow: hidden;
}

.foldout-content {
  transition: -webkit-transform .5s;
  transition: transform .5s;
  transition: transform .5s, -webkit-transform .5s;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  overflow: hidden;
  height: 0;
}

.foldout-content.show, .neos-backend .foldout-content {
  -webkit-transform: translateY(0);
          transform: translateY(0);
  height: auto;
}

.foldout-title:hover {
  cursor: pointer;
}

.foldout-title h3 {
  position: relative;
}

.foldout-title h3 div {
  display: inline-block;
}

.foldout-title h3:before {
  position: absolute;
  top: -0.3rem;
  content: '';
  display: inline-block;
  position: relative;
  left: 0.375em;
  top: 0.375em;
  border: 0.75em solid transparent;
  border-left-color: #000;
  margin-right: 0.5rem;
}

.foldout-title.active h3:before {
  left: 0;
  top: 0.8em;
  border-color: #000 transparent transparent;
}

.youtube__root {
  position: relative;
  padding-bottom: 55%;
  padding-top: 15px;
  margin-bottom: 1.5em;
  height: 0;
  overflow: hidden;
}

.youtube__root iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.contact-item__wrapper {
  padding-bottom: 1rem;
  background-color: white;
}

.contact-item__wrapper p.compact {
  padding: 0;
  margin: 0;
}

.courseview-listeitem {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.courseview-listeitem:after {
  content: " ";
  display: block;
  clear: both;
}

.courseview-listeitem__nr {
  width: 14.28571%;
  float: left;
  margin-right: 2.85714%;
}

.courseview-listeitem__nr p {
  padding-top: 0.3rem;
}

.courseview-listeitem__title {
  width: 48.57143%;
  float: left;
  margin-right: 2.85714%;
}

.courseview-listeitem__date {
  width: 31.42857%;
  float: right;
  margin-right: 0;
}

.courseview-listeitem__date p {
  padding-top: 0.3rem;
}

.vimeo__root {
  position: relative;
  padding-bottom: 55%;
  padding-top: 15px;
  margin-bottom: 1.5em;
  height: 0;
  overflow: hidden;
}

.vimeo__root iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

body {
  background-repeat: repeat-y;
  background-size: 100% auto;
}

body.background01 {
  background-image: url("../Assets/Images/logo/generated/anim/background01.svg");
}

body.background02 {
  background-image: url("../Assets/Images/logo/generated/anim/background02.svg");
}

body.background03 {
  background-image: url("../Assets/Images/logo/generated/anim/background03.svg");
}

body.background04 {
  background-image: url("../Assets/Images/logo/generated/anim/background04.svg");
}

body.background05 {
  background-image: url("../Assets/Images/logo/generated/anim/background05.svg");
}

body.background06 {
  background-image: url("../Assets/Images/logo/generated/anim/background06.svg");
}

body.background07 {
  background-image: url("../Assets/Images/logo/generated/anim/background07.svg");
}

body.background08 {
  background-image: url("../Assets/Images/logo/generated/anim/background08.svg");
}

body.background09 {
  background-image: url("../Assets/Images/logo/generated/anim/background09.svg");
}

body.background10 {
  background-image: url("../Assets/Images/logo/generated/anim/background10.svg");
}

body.background11 {
  background-image: url("../Assets/Images/logo/generated/anim/background11.svg");
}

body.background12 {
  background-image: url("../Assets/Images/logo/generated/anim/background12.svg");
}

body.background13 {
  background-image: url("../Assets/Images/logo/generated/anim/background13.svg");
}

body.background14 {
  background-image: url("../Assets/Images/logo/generated/anim/background14.svg");
}

body.background15 {
  background-image: url("../Assets/Images/logo/generated/anim/background15.svg");
}

body.background16 {
  background-image: url("../Assets/Images/logo/generated/anim/background16.svg");
}

body.background17 {
  background-image: url("../Assets/Images/logo/generated/anim/background17.svg");
}

body.background18 {
  background-image: url("../Assets/Images/logo/generated/anim/background18.svg");
}

body.background19 {
  background-image: url("../Assets/Images/logo/generated/anim/background19.svg");
}

body.background20 {
  background-image: url("../Assets/Images/logo/generated/anim/background20.svg");
}

body.noBackground:not(.no-animation) {
  position: relative;
  background: none;
}

body.noBackground:not(.no-animation):after {
  pointer-events: none;
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-repeat: no-repeat;
}

body.noBackground.no-animation {
  background: none;
}

body.noBackground.no-animation:after {
  content: none;
}

body.noBackground.background01:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background01_d.svg");
}

body.noBackground.background02:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background02_d.svg");
}

body.noBackground.background03:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background03_d.svg");
}

body.noBackground.background04:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background04_d.svg");
}

body.noBackground.background05:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background05_d.svg");
}

body.noBackground.background06:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background06_d.svg");
}

body.noBackground.background07:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background07_d.svg");
}

body.noBackground.background08:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background08_d.svg");
}

body.noBackground.background09:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background09_d.svg");
}

body.noBackground.background10:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background10_d.svg");
}

body.noBackground.background11:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background11_d.svg");
}

body.noBackground.background12:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background12_d.svg");
}

body.noBackground.background13:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background13_d.svg");
}

body.noBackground.background14:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background14_d.svg");
}

body.noBackground.background15:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background15_d.svg");
}

body.noBackground.background16:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background16_d.svg");
}

body.noBackground.background17:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background17_d.svg");
}

body.noBackground.background18:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background18_d.svg");
}

body.noBackground.background19:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background19_d.svg");
}

body.noBackground.background20:not(.no-animation):after {
  background-image: url("../Assets/Images/logo/generated/disappear/background20_d.svg");
}

.course-root h3.button {
  text-transform: uppercase;
  letter-spacing: 0.1em;
  padding-bottom: 0.15em;
  border-bottom: black solid 0.15em;
  display: inline-block;
  margin-bottom: 1rem;
}

.course-root .course-complete {
  opacity: 0.3;
}

.course-root .course-form fieldset {
  width: 100%;
  border: none;
  padding: 0;
  margin: 0;
}

.course-root .course-form span.required {
  color: red;
}

.course-root .course-form .form-group {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 0.5rem;
}

.course-root .course-form .form-group:after {
  content: " ";
  display: block;
  clear: both;
}

.course-root .course-form .form-group label {
  width: 30.76923%;
  float: left;
  margin-right: 3.84615%;
}

.course-root .course-form .form-group .input {
  width: 65.38462%;
  float: right;
  margin-right: 0;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.course-root .course-form .form-group .input:after {
  content: " ";
  display: block;
  clear: both;
}

.course-root .course-form .form-group .input #contact-form-Strasse,
.course-root .course-form .form-group .input #contact-form-bill-Strasse {
  width: 82.35294%;
  float: left;
  margin-right: 5.88235%;
}

.course-root .course-form .form-group .input #contact-form-StrasseNr,
.course-root .course-form .form-group .input #contact-form-bill-StrasseNr {
  width: 11.76471%;
  float: right;
  margin-right: 0;
}

.course-root .course-form .form-group .input label.error {
  font-size: 0.8rem;
  color: red;
}

.course-root .course-form .form-group .input input,
.course-root .course-form .form-group .input select,
.course-root .course-form .form-group .input textarea,
.course-root .course-form .form-group .input button {
  box-sizing: border-box;
  width: 100%;
}

.course-root .course-form .switch-right-left .form-group label {
  width: 65.38462%;
  float: right;
  margin-right: 0;
}

.course-root .course-form .switch-right-left .form-group .input {
  width: 30.76923%;
  float: left;
  margin-right: 3.84615%;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  text-align: right;
}

.course-root .course-form .switch-right-left .form-group .input:after {
  content: " ";
  display: block;
  clear: both;
}

.course-root .course-form .switch-right-left .form-group .input input[type='radio'],
.course-root .course-form .switch-right-left .form-group .input input[type='checkbox'] {
  right: 0;
  width: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
